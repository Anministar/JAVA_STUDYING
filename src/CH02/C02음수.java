package CH02;

public class C02음수 {

	public static void main(String[] args) {
		//컴퓨터(CPU)는 가산(+) 처리 가능
		//컴퓨터(CPU)는 감산(-) 처리 불가
		//뺄셈 요청 -> 결과 확인이 되는데 ?왜 되냐
		//보수 도입 -> 뺄셈과 동일한 결과를 만들어 낸다  @ 보수는 보충 수
		
		
		
//		7 - 2 = 5
//		7 + 8 = 15 @ 15에서 증가되는 앞자리를 버려버림.
//		
//		54 - 13 = 41
//		54 + 87 = 141 @ 141에서 증가되는 앞자리를 버려버림.
//		
//		5 + (-5) = 0
//		
//		
//		00000101 = 5
//		11111010 = -6 (1의 보수)  @ 반전 == 1의 보수, 전부 반전하고 1을 더해줌 == 2진수, 2의보수를 구하려면 1의 보수에서 1을 증가시켜라
//	+	11111011 = -5 (2의 보수)  @ 더했을 때 2가 되려면, 다른 비트에 1이 증가하는 것도 생각해야함. 11111011 이 -5를 표현한 것이다.
//		-----------------
//		00000000 = 0 @더하면 00000000 되고 1증가하면 100000000이 되는데 증가되는 앞자리 버림. 00000000 == 0
				 
		// 제일 왼쪽 비트를 부호비트임. 음수를 지원하는 공간에서만 유효.
		
//		00000000 = 0
//		00000001 = 1
//		00000010 = 2
//		00000011 = 3
//		...
//		01111111 = 127  @ 0이니깐 양수임
//		10000000 = -128
//		10000001 = -128 + 1 = -127
//		10000010 = -128 + 2 = -126
//		10000011 = -128 + 3 = -125
//		..
//		11111111 = -128 + 127 = -1
//	+	00000001 = 1
//		----------------
//		100000000 = 0
		
		//--------------------------------------------------
				//문제 1) 다음 10진수의 양 / 음의 값 구하기
				//--------------------------------------------------
				//--------		--------
				//10진수			2진수
				//--------		--------
				//10	->		00001010
				//- 10	->		11110110
				//
				//111	->		01101111
				//- 111	->		10010001
				//
				//96	->		01100000
				//- 96	->		10100000
				//
				//48	->		00110000
				//- 48	->		01000000
				//
				//--------------------------------------------------
				//문제 2) 다음 이진 비트의 10진 값을 구하기
				//--------------------------------------------------
				//10001010	-> 	-128+8+2
				//01000111	-> 	64+7
				//
				//11100000	-> -128+64+32
				//11110000	-> -128+64+32+16
				//
				//10001011	-> -128+8+2+1
				//11010001	-> -128+64+16+1
				//
				//11111100 -> -128+64+32+16+8+4
				//10101010 -> -128+32+8+2
				
		
		
	}

}
